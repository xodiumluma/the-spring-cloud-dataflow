name: Milestone Worker

on:
  workflow_dispatch:
    inputs:
      build-zoo-handler:
        description: 'Build Zoo Handler Payload'
        required: true

env:
  MAVEN_THREADS: '-T 0.5C'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
    - uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'liberica'
    - uses: jvalkeal/setup-maven@v1
      with:
        maven-version: 3.8.8
        maven-mirror: 'https://dlcdn.apache.org/maven/maven-3/'
    - uses: jfrog/setup-jfrog-cli@v1
      with:
        version: 1.46.4
      env:
        JF_ARTIFACTORY_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    # target deploy repos
    - name: Configure JFrog Cli
      run: |
        jfrog rt mvnc \
          --server-id-resolve=repo.spring.io \
          --server-id-deploy=repo.spring.io \
          --repo-resolve-releases=libs-milestone \
          --repo-resolve-snapshots=libs-snapshot \
          --repo-deploy-releases=libs-milestone-local \
          --repo-deploy-snapshots=libs-snapshot-local
        echo JFROG_CLI_BUILD_NAME=spring-cloud-dataflow-main-milestone >> $GITHUB_ENV
        echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV

    # zoo extract and ensure
    - name: Extract Zoo Context Properties
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        dispatch-handler-extract-context-properties: true
        ensure-env: |
          BUILD_ZOO_HANDLER_milestone_version
          BUILD_ZOO_HANDLER_spring_cloud_deployer_version
          BUILD_ZOO_HANDLER_spring_cloud_dataflow_ui_version

    # build and publish to configured target
    - name: Build and Publish
      run: |
        jfrog rt mvn build-helper:parse-version versions:set \
          -gs .github/settings.xml \
          -Pstagingmilestone \
          -DprocessAllModules=true \
          -DgenerateBackupPoms=false \
          -Dartifactory.publish.artifacts=false \
          -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}-'${BUILD_ZOO_HANDLER_milestone_version} \
          -B
        BUILD_ZOO_HANDLER_spring_cloud_dataflow_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) >> $GITHUB_ENV
        echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_version=$BUILD_ZOO_HANDLER_spring_cloud_dataflow_version >> $GITHUB_ENV
        echo "::notice ::set dataflow.version=${BUILD_ZOO_HANDLER_spring_cloud_dataflow_version}"        
        jfrog rt mvn versions:set-property \
          -gs .github/settings.xml \
          -Pstagingmilestone \
          -DgenerateBackupPoms=false \
          -Dproperty=dataflow.version \
          -DnewVersion=${BUILD_ZOO_HANDLER_spring_cloud_dataflow_version} \
          -B        
        jfrog rt mvn versions:set-property \
          -gs .github/settings.xml \
          -Pstagingmilestone \
          -DgenerateBackupPoms=false \
          -Dproperty=spring-cloud-deployer.version \
          -DnewVersion=${BUILD_ZOO_HANDLER_spring_cloud_deployer_version} \
          -B
        jfrog rt mvn versions:set-property \
          -gs .github/settings.xml \
          -Pstagingmilestone \
          -DgenerateBackupPoms=false \
          -Dproperty=spring-cloud-dataflow-ui.version \
          -DnewVersion=${BUILD_ZOO_HANDLER_spring_cloud_dataflow_ui_version} \
          -B
        jfrog rt build-clean
        ./spring-cloud-dataflow-package/set-package-version.sh
        jfrog rt mvn -gs .github/settings.xml -Pstagingmilestone,full,deploymentfiles -B install -DskipTests 
        jfrog rt build-publish
        echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_version=$(mvn -gs .github/settings.xml -Pstagingmilestone help:evaluate -Dexpression=project.version -q -DforceStdout) >> $GITHUB_ENV
        echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname=spring-cloud-dataflow-main-milestone >> $GITHUB_ENV
        echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber=$GITHUB_RUN_NUMBER >> $GITHUB_ENV
    # zoo tag
    - name: Tag Release
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        tag-release-branch: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_version }}
        tag-release-tag: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_version }}
        tag-release-tag-prefix: v

    # build and publish images via composite action
    - name: Build and Publish Images
      uses: ./.github/actions/build-images
      with:
        version: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_version }}
        dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
        dockerhub-password: ${{ secrets.DOCKERHUB_TOKEN }}
        GCR_JSON_KEY: ${{ secrets.GCR_JSON_KEY }}

    # zoo success
    - name: Notify Build Success Zoo Handler Controller
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        dispatch-handler-token: ${{ secrets.SCDF_ACCESS_TOKEN }}
        dispatch-handler-client-payload-data: >
          {
            "event": "build-succeed"
          }

    # zoo failure
    - name: Notify Build Failure Zoo Handler Controller
      if: ${{ failure() }}
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        dispatch-handler-token: ${{ secrets.SCDF_ACCESS_TOKEN }}
        dispatch-handler-client-payload-data: >
          {
            "event": "build-failed",
            "message": "spring-cloud-dataflow failed"
          }
    # clean m2 cache
    - name: Clean cache
      run: |
        find ~/.m2/repository -type d -name '*SNAPSHOT' | xargs rm -fr
