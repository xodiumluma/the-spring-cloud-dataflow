name: Release Worker

on:
  workflow_dispatch:
    inputs:
      build-zoo-handler:
        description: 'Build Zoo Handler Payload'
        required: true

env:
  MAVEN_THREADS: '-T 0.5C'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'liberica'
      - uses: jvalkeal/setup-maven@v1
        with:
          maven-version: 3.8.8
          maven-mirror: 'https://dlcdn.apache.org/maven/maven-3/'
      - uses: jfrog/setup-jfrog-cli@v1
        with:
          version: 1.46.4
        env:
          JF_ARTIFACTORY_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      # target deploy repos
      - name: Configure JFrog Cli
        run: |
          jfrog rt mvnc \
            --server-id-resolve=repo.spring.io \
            --server-id-deploy=repo.spring.io \
            --repo-resolve-releases=libs-spring-dataflow-private-staging-release \
            --repo-resolve-snapshots=libs-snapshot \
            --repo-deploy-releases=libs-staging-local \
            --repo-deploy-snapshots=libs-snapshot-local
          echo JFROG_CLI_BUILD_NAME=spring-cloud-dataflow-main-release >> $GITHUB_ENV
          echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV

      # zoo extract and ensure
      - name: Extract Zoo Context Properties
        uses: jvalkeal/build-zoo-handler@v0.0.4
        with:
          dispatch-handler-extract-context-properties: true
          ensure-env: |
            BUILD_ZOO_HANDLER_spring_cloud_deployer_version
            BUILD_ZOO_HANDLER_spring_cloud_dataflow_ui_version

      # build and publish to configured target
      - name: Build and Publish
        run: |
          jfrog rt mvn build-helper:parse-version versions:set \
            -gs .github/settings.xml \
            -Pstagingrelease \
            -DskipResolution=true \
            -DprocessAllModules=true \
            -DgenerateBackupPoms=false \
            -Dartifactory.publish.artifacts=false \
            -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}' \
            -B
          BUILD_ZOO_HANDLER_spring_cloud_dataflow_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_version=$BUILD_ZOO_HANDLER_spring_cloud_dataflow_version >> $GITHUB_ENV
          echo "::notice ::set dataflow.version=${BUILD_ZOO_HANDLER_spring_cloud_dataflow_version}"
          jfrog rt mvn versions:set-property \
            -gs .github/settings.xml \
            -Pstagingrelease \
            -DskipResolution=true \
            -DgenerateBackupPoms=false \
            -Dproperty=dataflow.version \
            -DnewVersion=${BUILD_ZOO_HANDLER_spring_cloud_dataflow_version} \
            -B             
          echo "::notice ::set spring-cloud-deployer.version=${BUILD_ZOO_HANDLER_spring_cloud_deployer_version}"
          jfrog rt mvn versions:set-property \
            -gs .github/settings.xml \
            -Pstagingrelease \
            -DskipResolution=true \
            -DgenerateBackupPoms=false \
            -Dproperty=spring-cloud-deployer.version \
            -DnewVersion=${BUILD_ZOO_HANDLER_spring_cloud_deployer_version} \
            -B
          echo "::notice ::set spring-cloud-dataflow-ui.version=${BUILD_ZOO_HANDLER_spring_cloud_dataflow_ui_version}"
          jfrog rt mvn versions:set-property \
            -gs .github/settings.xml \
            -DskipResolution=true \
            -Pstagingrelease \
            -DgenerateBackupPoms=false \
            -Dproperty=spring-cloud-dataflow-ui.version \
            -DnewVersion=${BUILD_ZOO_HANDLER_spring_cloud_dataflow_ui_version} \
            -B
          echo "::notice ::build-clean"
          jfrog rt build-clean
          echo "::notice ::set-package-version"
          ./spring-cloud-dataflow-package/set-package-version.sh
          echo "::notice ::install"
          jfrog rt mvn -gs .github/settings.xml -Pstagingrelease,full,deploymentfiles -B install -DskipTests
          echo "::notice ::build-publish"
          jfrog rt build-publish
          spring_cloud_dataflow_version=$(mvn -gs .github/settings.xml -Pstagingrelease help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_version=$spring_cloud_dataflow_version >> $GITHUB_ENV
          echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname=spring-cloud-dataflow-main-release >> $GITHUB_ENV
          echo BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber=$GITHUB_RUN_NUMBER >> $GITHUB_ENV
          echo BUILD_ZOO_HANDLER_spring_cloud_skipper_version=$spring_cloud_dataflow_version >> $GITHUB_ENV
          
          echo "::info ::BUILD_ZOO_HANDLER_spring_cloud_dataflow_version=$spring_cloud_dataflow_version" 
          echo "::info ::BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname=spring-cloud-dataflow-main-release" 
          echo "::info ::BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber=$GITHUB_RUN_NUMBER" 
          echo "::info ::BUILD_ZOO_HANDLER_spring_cloud_skipper_version=$spring_cloud_dataflow_version"
      # zoo tag
      - name: Tag Release
        uses: jvalkeal/build-zoo-handler@v0.0.4
        with:
          tag-release-branch: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_version }}
          tag-release-tag: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_version }}
          tag-release-tag-prefix: v
        # clean m2 cache
      - name: Clean cache
        run: |
          find ~/.m2/repository -type d -name '*SNAPSHOT' | xargs rm -fr
    outputs:
      version: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_version }}
      BUILD_ZOO_HANDLER_spring_cloud_dataflow_version: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_version }}
      BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname }}
      BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber }}
      BUILD_ZOO_HANDLER_spring_cloud_skipper_version: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_skipper_version }}
  images:
    name: Build and Publish Images
    needs:
      - build
    uses: ./.github/workflows/build-images.yml
    with:
      version: ${{ needs.build.outputs.version }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      GCR_JSON_KEY: ${{ secrets.GCR_JSON_KEY }}
      ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
      ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
  wrap:
    needs: [ build, images ]
    runs-on: ubuntu-latest
    steps:
      - name: Save env
        shell: bash
        if: ${{ success() }}
        run: |
          echo "BUILD_ZOO_HANDLER_spring_cloud_dataflow_version=${{ needs.build.outputs.BUILD_ZOO_HANDLER_spring_cloud_dataflow_version }}" >> $GITHUB_ENV
          echo "BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname=${{ needs.build.outputs.BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildname }}" >> $GITHUB_ENV 
          echo "BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber=${{ needs.build.outputs.BUILD_ZOO_HANDLER_spring_cloud_dataflow_buildnumber }}" >> $GITHUB_ENV
          echo "BUILD_ZOO_HANDLER_spring_cloud_skipper_version=${{ needs.build.outputs.BUILD_ZOO_HANDLER_spring_cloud_skipper_version }}" >> $GITHUB_ENV

      # zoo success
      - name: Notify Build Success Zoo Handler Controller
        if: ${{ success() }}
        uses: jvalkeal/build-zoo-handler@v0.0.4
        with:
          dispatch-handler-token: ${{ secrets.SCDF_ACCESS_TOKEN }}
          dispatch-handler-client-payload-data: >
            {
              "event": "build-succeed"
            }

      # zoo failure
      - name: Notify Build Failure Zoo Handler Controller
        if: ${{ failure() }}
        uses: jvalkeal/build-zoo-handler@v0.0.4
        with:
          dispatch-handler-token: ${{ secrets.SCDF_ACCESS_TOKEN }}
          dispatch-handler-client-payload-data: >
            {
              "event": "build-failed",
              "message": "spring-cloud-dataflow failed"
            }
